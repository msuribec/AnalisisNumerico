#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 14, 2020 09:13:05 PM EST  platform: Windows NT

import sys
import oneVariableEquations.busquedasInc as incsearch
import oneVariableEquations.newton as newton
import oneVariableEquations.ptofijo as fixedpoint
import oneVariableEquations.raicesmult as multroots
import oneVariableEquations.secant as secant
from sympy.parsing.sympy_parser import parse_expr
import sympy as sp
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global combobox
    combobox = tk.StringVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import openmethods
    openmethods.vp_start_gui()


def runMethod(choiceInteg, fEntry, gEntry_1, x0Entry, x1Entry, iterationsEntry, tolEntry, Scrolledtext1):
    Scrolledtext1.delete("1.0", 'end')
    k = choiceInteg.get()
    str = fEntry.get()
    f = getSympyFun(str)
    x0 = float(x0Entry.get())
    tol = float(tolEntry.get())
    iter_max = int(iterationsEntry.get())
    ops= ['Fixed Point','Newton','Secant','Multiple roots','Incremental searches',]
    x=sp.Symbol('x')
    if k == ops[0]:
        strg = gEntry_1.get()
        g = getSympyFun(strg)
        fixedpoint.puntofijo(x,f,g,x0,iter_max,tol,Scrolledtext1)
    elif k==ops[1]:
        newton.newton(x,f,x0,tol,iter_max,Scrolledtext1)
    elif k == ops[2]:
        x1 = float(x1Entry.get())
        secant.secant(x,f,x0,x1,iter_max,tol,Scrolledtext1)
    elif k == ops[3]:
        multroots.rmult(x,f,x0,iter_max,tol,Scrolledtext1)
    elif k == ops[4]:
        incsearch.busquedasIncrementales(x,f,x0,tol,iter_max,Scrolledtext1)
    else:
        Scrolledtext1.insert(tk.INSERT, "Please pick a method")



def getSympyFun(str):
    x = sp.Symbol('x')
    expr = parse_expr(str, evaluate=False)
    return expr

