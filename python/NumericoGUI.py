#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 14, 2020 02:00:35 PM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import NumericoGUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    NumericoGUI_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    NumericoGUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1082x793+193+93")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1,  1)
        top.title("Numerical Analysis")
        top.configure(relief="groove")
        top.configure(background="#ffffff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.trapzButton = tk.Button(top)
        self.trapzButton.place(relx=0.102, rely=0.088, height=33, width=126)
        self.trapzButton.configure(activebackground="#ececec")
        self.trapzButton.configure(activeforeground="#000000")
        self.trapzButton.configure(background="#5bc7e6")
        self.trapzButton.configure(disabledforeground="#a3a3a3")
        self.trapzButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.trapzButton.configure(foreground="#fdfdfd")
        self.trapzButton.configure(highlightbackground="#d9d9d9")
        self.trapzButton.configure(highlightcolor="black")
        self.trapzButton.configure(pady="0")
        self.trapzButton.configure(relief="flat")
        self.trapzButton.configure(text='''Trapezoid''')

        self.trapzgenButton = tk.Button(top)
        self.trapzgenButton.place(relx=0.24, rely=0.088, height=33, width=196)
        self.trapzgenButton.configure(activebackground="#ececec")
        self.trapzgenButton.configure(activeforeground="#000000")
        self.trapzgenButton.configure(background="#5bc7e6")
        self.trapzgenButton.configure(disabledforeground="#a3a3a3")
        self.trapzgenButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.trapzgenButton.configure(foreground="#fdfdfd")
        self.trapzgenButton.configure(highlightbackground="#d9d9d9")
        self.trapzgenButton.configure(highlightcolor="black")
        self.trapzgenButton.configure(pady="0")
        self.trapzgenButton.configure(relief="flat")
        self.trapzgenButton.configure(text='''Trapezoid Generalized''')

        self.simpsButton = tk.Button(top)
        self.simpsButton.place(relx=0.453, rely=0.088, height=33, width=106)
        self.simpsButton.configure(activebackground="#ececec")
        self.simpsButton.configure(activeforeground="#000000")
        self.simpsButton.configure(background="#5bc7e6")
        self.simpsButton.configure(disabledforeground="#a3a3a3")
        self.simpsButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.simpsButton.configure(foreground="#fdfdfd")
        self.simpsButton.configure(highlightbackground="#d9d9d9")
        self.simpsButton.configure(highlightcolor="black")
        self.simpsButton.configure(pady="0")
        self.simpsButton.configure(relief="flat")
        self.simpsButton.configure(text='''Simpson 1/3''')

        self.simpsgenButton = tk.Button(top)
        self.simpsgenButton.place(relx=0.573, rely=0.088, height=33, width=206)
        self.simpsgenButton.configure(activebackground="#ececec")
        self.simpsgenButton.configure(activeforeground="#000000")
        self.simpsgenButton.configure(background="#5bc7e6")
        self.simpsgenButton.configure(disabledforeground="#a3a3a3")
        self.simpsgenButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.simpsgenButton.configure(foreground="#fdfdfd")
        self.simpsgenButton.configure(highlightbackground="#d9d9d9")
        self.simpsgenButton.configure(highlightcolor="black")
        self.simpsgenButton.configure(pady="0")
        self.simpsgenButton.configure(relief="flat")
        self.simpsgenButton.configure(text='''Simpson 1/3 Generalized''')

        self.simps38Button = tk.Button(top)
        self.simps38Button.place(relx=0.786, rely=0.088, height=33, width=126)
        self.simps38Button.configure(activebackground="#ececec")
        self.simps38Button.configure(activeforeground="#000000")
        self.simps38Button.configure(background="#5bc7e6")
        self.simps38Button.configure(disabledforeground="#a3a3a3")
        self.simps38Button.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.simps38Button.configure(foreground="#fdfdfd")
        self.simps38Button.configure(highlightbackground="#d9d9d9")
        self.simps38Button.configure(highlightcolor="black")
        self.simps38Button.configure(pady="0")
        self.simps38Button.configure(relief="flat")
        self.simps38Button.configure(text='''Simpson 3/8''')

        self.vanderButton = tk.Button(top)
        self.vanderButton.place(relx=0.092, rely=0.24, height=33, width=126)
        self.vanderButton.configure(activebackground="#ececec")
        self.vanderButton.configure(activeforeground="#000000")
        self.vanderButton.configure(background="#73dbd3")
        self.vanderButton.configure(disabledforeground="#a3a3a3")
        self.vanderButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.vanderButton.configure(foreground="#fdfdfd")
        self.vanderButton.configure(highlightbackground="#d9d9d9")
        self.vanderButton.configure(highlightcolor="black")
        self.vanderButton.configure(pady="0")
        self.vanderButton.configure(relief="flat")
        self.vanderButton.configure(text='''Vandermonde''')

        self.gausselimButton = tk.Button(top)
        self.gausselimButton.place(relx=0.092, rely=0.378, height=33, width=166)
        self.gausselimButton.configure(activebackground="#ececec")
        self.gausselimButton.configure(activeforeground="#000000")
        self.gausselimButton.configure(background="#ec8cd1")
        self.gausselimButton.configure(disabledforeground="#a3a3a3")
        self.gausselimButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.gausselimButton.configure(foreground="#fdfdfd")
        self.gausselimButton.configure(highlightbackground="#d9d9d9")
        self.gausselimButton.configure(highlightcolor="black")
        self.gausselimButton.configure(pady="0")
        self.gausselimButton.configure(relief="flat")
        self.gausselimButton.configure(text='''Gaussian elimination''')

        self.jacobiButton = tk.Button(top)
        self.jacobiButton.place(relx=0.388, rely=0.58, height=33, width=76)
        self.jacobiButton.configure(activebackground="#ececec")
        self.jacobiButton.configure(activeforeground="#000000")
        self.jacobiButton.configure(background="#5b7cdd")
        self.jacobiButton.configure(disabledforeground="#a3a3a3")
        self.jacobiButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.jacobiButton.configure(foreground="#fdfdfd")
        self.jacobiButton.configure(highlightbackground="#d9d9d9")
        self.jacobiButton.configure(highlightcolor="black")
        self.jacobiButton.configure(pady="0")
        self.jacobiButton.configure(relief="flat")
        self.jacobiButton.configure(text='''Jacobi''')

        self.incsearchButton = tk.Button(top)
        self.incsearchButton.place(relx=0.102, rely=0.731, height=33, width=156)
        self.incsearchButton.configure(activebackground="#ececec")
        self.incsearchButton.configure(activeforeground="#000000")
        self.incsearchButton.configure(background="#bfb5fb")
        self.incsearchButton.configure(disabledforeground="#a3a3a3")
        self.incsearchButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.incsearchButton.configure(foreground="#fdfdfd")
        self.incsearchButton.configure(highlightbackground="#d9d9d9")
        self.incsearchButton.configure(highlightcolor="black")
        self.incsearchButton.configure(pady="0")
        self.incsearchButton.configure(relief="flat")
        self.incsearchButton.configure(text='''Incremental search''')

        self.bisectButton = tk.Button(top)
        self.bisectButton.place(relx=0.259, rely=0.731, height=33, width=76)
        self.bisectButton.configure(activebackground="#ececec")
        self.bisectButton.configure(activeforeground="#000000")
        self.bisectButton.configure(background="#bfb5fb")
        self.bisectButton.configure(disabledforeground="#a3a3a3")
        self.bisectButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.bisectButton.configure(foreground="#fdfdfd")
        self.bisectButton.configure(highlightbackground="#d9d9d9")
        self.bisectButton.configure(highlightcolor="black")
        self.bisectButton.configure(pady="0")
        self.bisectButton.configure(relief="flat")
        self.bisectButton.configure(text='''Bisection''')

        self.regulafalsiButton = tk.Button(top)
        self.regulafalsiButton.place(relx=0.721, rely=0.731, height=33
                , width=116)
        self.regulafalsiButton.configure(activebackground="#ececec")
        self.regulafalsiButton.configure(activeforeground="#000000")
        self.regulafalsiButton.configure(background="#bfb5fb")
        self.regulafalsiButton.configure(disabledforeground="#a3a3a3")
        self.regulafalsiButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.regulafalsiButton.configure(foreground="#fdfdfd")
        self.regulafalsiButton.configure(highlightbackground="#d9d9d9")
        self.regulafalsiButton.configure(highlightcolor="black")
        self.regulafalsiButton.configure(pady="0")
        self.regulafalsiButton.configure(relief="flat")
        self.regulafalsiButton.configure(text='''Multiple roots''')

        self.fixedpointButton = tk.Button(top)
        self.fixedpointButton.place(relx=0.342, rely=0.731, height=33, width=106)

        self.fixedpointButton.configure(activebackground="#ececec")
        self.fixedpointButton.configure(activeforeground="#000000")
        self.fixedpointButton.configure(background="#bfb5fb")
        self.fixedpointButton.configure(disabledforeground="#a3a3a3")
        self.fixedpointButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.fixedpointButton.configure(foreground="#fdfdfd")
        self.fixedpointButton.configure(highlightbackground="#d9d9d9")
        self.fixedpointButton.configure(highlightcolor="black")
        self.fixedpointButton.configure(pady="0")
        self.fixedpointButton.configure(relief="flat")
        self.fixedpointButton.configure(text='''Regula falsi''')

        self.newtonButton = tk.Button(top)
        self.newtonButton.place(relx=0.453, rely=0.731, height=33, width=96)
        self.newtonButton.configure(activebackground="#ececec")
        self.newtonButton.configure(activeforeground="#000000")
        self.newtonButton.configure(background="#bfb5fb")
        self.newtonButton.configure(disabledforeground="#a3a3a3")
        self.newtonButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.newtonButton.configure(foreground="#fdfdfd")
        self.newtonButton.configure(highlightbackground="#d9d9d9")
        self.newtonButton.configure(highlightcolor="black")
        self.newtonButton.configure(pady="0")
        self.newtonButton.configure(relief="flat")
        self.newtonButton.configure(text='''Fixed point''')

        self.secantButton = tk.Button(top)
        self.secantButton.place(relx=0.555, rely=0.731, height=33, width=76)
        self.secantButton.configure(activebackground="#ececec")
        self.secantButton.configure(activeforeground="#000000")
        self.secantButton.configure(background="#bfb5fb")
        self.secantButton.configure(disabledforeground="#a3a3a3")
        self.secantButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.secantButton.configure(foreground="#fdfdfd")
        self.secantButton.configure(highlightbackground="#d9d9d9")
        self.secantButton.configure(highlightcolor="black")
        self.secantButton.configure(pady="0")
        self.secantButton.configure(relief="flat")
        self.secantButton.configure(text='''Newton''')

        self.multrootsButton = tk.Button(top)
        self.multrootsButton.place(relx=0.638, rely=0.731, height=33, width=76)
        self.multrootsButton.configure(activebackground="#ececec")
        self.multrootsButton.configure(activeforeground="#000000")
        self.multrootsButton.configure(background="#bfb5fb")
        self.multrootsButton.configure(disabledforeground="#a3a3a3")
        self.multrootsButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.multrootsButton.configure(foreground="#fdfdfd")
        self.multrootsButton.configure(highlightbackground="#d9d9d9")
        self.multrootsButton.configure(highlightcolor="black")
        self.multrootsButton.configure(pady="0")
        self.multrootsButton.configure(relief="flat")
        self.multrootsButton.configure(text='''Secant''')

        self.gaussSeidelButton = tk.Button(top)
        self.gaussSeidelButton.place(relx=0.476, rely=0.579, height=33
                , width=126)
        self.gaussSeidelButton.configure(activebackground="#ececec")
        self.gaussSeidelButton.configure(activeforeground="#000000")
        self.gaussSeidelButton.configure(background="#5b7cdd")
        self.gaussSeidelButton.configure(disabledforeground="#a3a3a3")
        self.gaussSeidelButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.gaussSeidelButton.configure(foreground="#fdfdfd")
        self.gaussSeidelButton.configure(highlightbackground="#d9d9d9")
        self.gaussSeidelButton.configure(highlightcolor="black")
        self.gaussSeidelButton.configure(pady="0")
        self.gaussSeidelButton.configure(relief="flat")
        self.gaussSeidelButton.configure(text='''Gauss Seidel''')

        self.gausspartialButton = tk.Button(top)
        self.gausspartialButton.place(relx=0.268, rely=0.378, height=33
                , width=336)
        self.gausspartialButton.configure(activebackground="#ececec")
        self.gausspartialButton.configure(activeforeground="#000000")
        self.gausspartialButton.configure(background="#ec8cd1")
        self.gausspartialButton.configure(disabledforeground="#a3a3a3")
        self.gausspartialButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.gausspartialButton.configure(foreground="#fdfdfd")
        self.gausspartialButton.configure(highlightbackground="#d9d9d9")
        self.gausspartialButton.configure(highlightcolor="black")
        self.gausspartialButton.configure(pady="0")
        self.gausspartialButton.configure(relief="flat")
        self.gausspartialButton.configure(text='''Gaussian elimination with partial pivoting''')

        self.gausstotalButton = tk.Button(top)
        self.gausstotalButton.place(relx=0.591, rely=0.378, height=33, width=336)

        self.gausstotalButton.configure(activebackground="#ececec")
        self.gausstotalButton.configure(activeforeground="#000000")
        self.gausstotalButton.configure(background="#ec8cd1")
        self.gausstotalButton.configure(disabledforeground="#a3a3a3")
        self.gausstotalButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.gausstotalButton.configure(foreground="#fdfdfd")
        self.gausstotalButton.configure(highlightbackground="#d9d9d9")
        self.gausstotalButton.configure(highlightcolor="black")
        self.gausstotalButton.configure(pady="0")
        self.gausstotalButton.configure(relief="flat")
        self.gausstotalButton.configure(text='''Gaussian elimination with total pivoting''')

        self.LUButton = tk.Button(top)
        self.LUButton.place(relx=0.092, rely=0.429, height=33, width=266)
        self.LUButton.configure(activebackground="#ececec")
        self.LUButton.configure(activeforeground="#000000")
        self.LUButton.configure(background="#ec8cd1")
        self.LUButton.configure(disabledforeground="#a3a3a3")
        self.LUButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.LUButton.configure(foreground="#fdfdfd")
        self.LUButton.configure(highlightbackground="#d9d9d9")
        self.LUButton.configure(highlightcolor="black")
        self.LUButton.configure(pady="0")
        self.LUButton.configure(relief="flat")
        self.LUButton.configure(text='''LU fact with gaussian elimination''')

        self.LUpartialButton = tk.Button(top)
        self.LUpartialButton.place(relx=0.351, rely=0.429, height=33, width=266)
        self.LUpartialButton.configure(activebackground="#ececec")
        self.LUpartialButton.configure(activeforeground="#000000")
        self.LUpartialButton.configure(background="#ec8cd1")
        self.LUpartialButton.configure(disabledforeground="#a3a3a3")
        self.LUpartialButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.LUpartialButton.configure(foreground="#fdfdfd")
        self.LUpartialButton.configure(highlightbackground="#d9d9d9")
        self.LUpartialButton.configure(highlightcolor="black")
        self.LUpartialButton.configure(pady="0")
        self.LUpartialButton.configure(relief="flat")
        self.LUpartialButton.configure(text='''LU fact with partial pivoting''')

        self.cholButton = tk.Button(top)
        self.cholButton.place(relx=0.61, rely=0.429, height=33, width=96)
        self.cholButton.configure(activebackground="#ececec")
        self.cholButton.configure(activeforeground="#000000")
        self.cholButton.configure(background="#ec8cd1")
        self.cholButton.configure(disabledforeground="#a3a3a3")
        self.cholButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.cholButton.configure(foreground="#fdfdfd")
        self.cholButton.configure(highlightbackground="#d9d9d9")
        self.cholButton.configure(highlightcolor="black")
        self.cholButton.configure(pady="0")
        self.cholButton.configure(relief="flat")
        self.cholButton.configure(text='''Cholesky''')

        self.croutButton = tk.Button(top)
        self.croutButton.place(relx=0.712, rely=0.429, height=33, width=96)
        self.croutButton.configure(activebackground="#ececec")
        self.croutButton.configure(activeforeground="#000000")
        self.croutButton.configure(background="#ec8cd1")
        self.croutButton.configure(disabledforeground="#a3a3a3")
        self.croutButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.croutButton.configure(foreground="#fdfdfd")
        self.croutButton.configure(highlightbackground="#d9d9d9")
        self.croutButton.configure(highlightcolor="black")
        self.croutButton.configure(pady="0")
        self.croutButton.configure(relief="flat")
        self.croutButton.configure(text='''Crout''')

        self.doolittleButton = tk.Button(top)
        self.doolittleButton.place(relx=0.813, rely=0.429, height=33, width=96)
        self.doolittleButton.configure(activebackground="#ececec")
        self.doolittleButton.configure(activeforeground="#000000")
        self.doolittleButton.configure(background="#ec8cd1")
        self.doolittleButton.configure(disabledforeground="#a3a3a3")
        self.doolittleButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.doolittleButton.configure(foreground="#fdfdfd")
        self.doolittleButton.configure(highlightbackground="#d9d9d9")
        self.doolittleButton.configure(highlightcolor="black")
        self.doolittleButton.configure(pady="0")
        self.doolittleButton.configure(relief="flat")
        self.doolittleButton.configure(text='''Doolittle''')

        self.divdifButton = tk.Button(top)
        self.divdifButton.place(relx=0.222, rely=0.24, height=33, width=166)
        self.divdifButton.configure(activebackground="#ececec")
        self.divdifButton.configure(activeforeground="#000000")
        self.divdifButton.configure(background="#73dbd3")
        self.divdifButton.configure(disabledforeground="#a3a3a3")
        self.divdifButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.divdifButton.configure(foreground="#fdfdfd")
        self.divdifButton.configure(highlightbackground="#d9d9d9")
        self.divdifButton.configure(highlightcolor="black")
        self.divdifButton.configure(pady="0")
        self.divdifButton.configure(relief="flat")
        self.divdifButton.configure(text='''Divided differences''')

        self.lagrangeButton = tk.Button(top)
        self.lagrangeButton.place(relx=0.388, rely=0.24, height=33, width=106)
        self.lagrangeButton.configure(activebackground="#ececec")
        self.lagrangeButton.configure(activeforeground="#000000")
        self.lagrangeButton.configure(background="#73dbd3")
        self.lagrangeButton.configure(disabledforeground="#a3a3a3")
        self.lagrangeButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.lagrangeButton.configure(foreground="#fdfdfd")
        self.lagrangeButton.configure(highlightbackground="#d9d9d9")
        self.lagrangeButton.configure(highlightcolor="black")
        self.lagrangeButton.configure(pady="0")
        self.lagrangeButton.configure(relief="flat")
        self.lagrangeButton.configure(text='''Lagrange''')

        self.linearsplinesButton = tk.Button(top)
        self.linearsplinesButton.place(relx=0.499, rely=0.24, height=33
                , width=126)
        self.linearsplinesButton.configure(activebackground="#ececec")
        self.linearsplinesButton.configure(activeforeground="#000000")
        self.linearsplinesButton.configure(background="#73dbd3")
        self.linearsplinesButton.configure(disabledforeground="#a3a3a3")
        self.linearsplinesButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.linearsplinesButton.configure(foreground="#fdfdfd")
        self.linearsplinesButton.configure(highlightbackground="#d9d9d9")
        self.linearsplinesButton.configure(highlightcolor="black")
        self.linearsplinesButton.configure(pady="0")
        self.linearsplinesButton.configure(relief="flat")
        self.linearsplinesButton.configure(text='''Linear splines''')

        self.quadsplinesButton = tk.Button(top)
        self.quadsplinesButton.place(relx=0.628, rely=0.24, height=33, width=136)

        self.quadsplinesButton.configure(activebackground="#ececec")
        self.quadsplinesButton.configure(activeforeground="#000000")
        self.quadsplinesButton.configure(background="#73dbd3")
        self.quadsplinesButton.configure(disabledforeground="#a3a3a3")
        self.quadsplinesButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.quadsplinesButton.configure(foreground="#fdfdfd")
        self.quadsplinesButton.configure(highlightbackground="#d9d9d9")
        self.quadsplinesButton.configure(highlightcolor="black")
        self.quadsplinesButton.configure(pady="0")
        self.quadsplinesButton.configure(relief="flat")
        self.quadsplinesButton.configure(text='''Quadratic splines''')

        self.cubicsplinesButton = tk.Button(top)
        self.cubicsplinesButton.place(relx=0.767, rely=0.24, height=33
                , width=146)
        self.cubicsplinesButton.configure(activebackground="#ececec")
        self.cubicsplinesButton.configure(activeforeground="#000000")
        self.cubicsplinesButton.configure(background="#73dbd3")
        self.cubicsplinesButton.configure(disabledforeground="#a3a3a3")
        self.cubicsplinesButton.configure(font="-family {Segoe UI Black} -size 9 -weight bold")
        self.cubicsplinesButton.configure(foreground="#fdfdfd")
        self.cubicsplinesButton.configure(highlightbackground="#d9d9d9")
        self.cubicsplinesButton.configure(highlightcolor="black")
        self.cubicsplinesButton.configure(pady="0")
        self.cubicsplinesButton.configure(relief="flat")
        self.cubicsplinesButton.configure(text='''Cubic splines''')

if __name__ == '__main__':
    vp_start_gui()





