#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 14, 2020 02:34:50 PM EST  platform: Windows NT

import sys

from sympy.parsing.sympy_parser import parse_expr
import sympy as sp

import integration.Integration as integration
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global combobox
    combobox = tk.StringVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top


def runMethod(choiceInteg,functionEntry,valueaEntry,valuebEntry,resultMessage,intervalsEntry):

    ind=choiceInteg.get()
    str=functionEntry.get()
    f=getNumpyFun(str)
    a=float(valueaEntry.get())
    b=float(valuebEntry.get())

    ops = ['trapezoid','trapezoid generalized','simpson 1/3','simpson 1/3 generalized','simpson 3/8',]

    if ind==ops[0]:
        res=integration.trapz(f, a, b)
    elif ind==ops[1]:
        N=int(intervalsEntry.get())
        res=integration.trapzComp(f, a, b, N)
    elif ind == ops[2]:
        res=integration.simps(f,a,b)
    elif ind == ops[3]:
        N = int(intervalsEntry.get())
        res=integration.simpsComp(f,a,b,N)
    elif ind == ops[4]:
        res=integration.simpson38(f,a,b)
    else:
        res='''No method was chosen'''
    resultMessage.configure(text=res)
    return None

def getNumpyFun(str):
    x = sp.Symbol('x')
    expr = parse_expr(str, evaluate=False)
    f = sp.lambdify(x, expr, "numpy")
    return f
def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import Integ
    Integ.vp_start_gui()




